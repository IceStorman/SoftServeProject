"""Add index column to SportsIndex

Revision ID: 101e4389fa29
Revises: a206ce4b35b7
Create Date: 2024-11-13 15:41:03.919766

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '101e4389fa29'
down_revision: Union[str, None] = 'a206ce4b35b7'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('news_ratings')
    op.drop_table('newss')
    op.drop_table('user_recommendations')
    op.drop_table('news_popularity_log')
    op.drop_table('interactions')
    op.drop_table('userss')
    op.drop_table('user_teams')
    op.drop_table('user_sports')
    op.add_column('SportsIndex', sa.Column('index', sa.String(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('SportsIndex', 'index')
    op.create_table('user_sports',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('sport_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['userss.id'], name='user_sports_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_sports_pkey'),
    sa.UniqueConstraint('user_id', 'sport_name', name='user_sports_user_id_sport_name_key')
    )
    op.create_table('user_teams',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('team_name', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['userss.id'], name='user_teams_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_teams_pkey'),
    sa.UniqueConstraint('user_id', 'team_name', name='user_teams_user_id_team_name_key')
    )
    op.create_table('userss',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('userss_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='userss_pkey'),
    sa.UniqueConstraint('email', name='userss_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('interactions',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('news_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('interaction_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('interaction_timestamp', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['newss.id'], name='fk_news_id', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['userss.id'], name='fk_user_id', ondelete='CASCADE'),
    sa.UniqueConstraint('user_id', 'news_id', name='interactions_user_id_news_id_key')
    )
    op.create_table('news_popularity_log',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('news_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('popularity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['newss.id'], name='news_popularity_log_news_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='news_popularity_log_pkey')
    )
    op.create_table('user_recommendations',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('news_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('recommendation_score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['newss.id'], name='user_recommendations_news_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['userss.id'], name='user_recommendations_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_recommendations_pkey'),
    sa.UniqueConstraint('user_id', 'news_id', name='user_recommendations_user_id_news_id_key')
    )
    op.create_table('newss',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('newss_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('popularity', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True),
    sa.Column('publication_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('teams', postgresql.ARRAY(sa.VARCHAR()), autoincrement=False, nullable=True),
    sa.Column('sport', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='newss_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('news_ratings',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('news_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['news_id'], ['newss.id'], name='news_ratings_news_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['userss.id'], name='news_ratings_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='news_ratings_pkey'),
    sa.UniqueConstraint('user_id', 'news_id', name='news_ratings_user_id_news_id_key')
    )
    # ### end Alembic commands ###
